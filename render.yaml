services:
  - type: worker
    name: celery-worker
    region: ohio
    runtime: python
    buildCommand: |
      cd lunch_room
      pip install -r requirements.txt
    startCommand: |
      cd lunch_room
      celery --app config worker --loglevel info --concurrency 4
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings

  - type: web
    name: app
    region: ohio
    runtime: python
    buildCommand: |
      cd lunch_room
      pip install -r requirements.txt
      python manage.py makemigrations
      python manage.py migrate
      python manage.py initializer
    startCommand: |
      cd lunch_room
      gunicorn config.wsgi:application
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: DJANGO_DEBUG
        value: false

  - type: web
    name: flower
    region: ohio
    plan: free
    runtime: python
    buildCommand: |
      cd lunch_room
      pip install -r requirements.txt
    startCommand: |
      cd lunch_room
      celery flower --app config --loglevel info --port $PORT
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: celery-redis
          property: connectionString
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings

  - type: redis
    name: celery-redis
    region: ohio
    plan: starter
    maxmemoryPolicy: noeviction
    ipAllowList: []